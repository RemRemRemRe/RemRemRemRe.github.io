

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>RemRemRemRe</title>
  <subtitle>Sharing something useful to the world :)</subtitle>
  <updated>2023-11-13T21:26:12+08:00</updated>
  <author>
    <name>RemRemRemRe</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/zh_CN/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/zh_CN/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator>
  <rights> © 2023 RemRemRemRe </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>解析FGameplayTagQuery</title>
    <link href="http://localhost:4000/zh_CN/posts/Inside-FGameplayTagQuery/" rel="alternate" type="text/html" title="解析FGameplayTagQuery" />
    <published>2023-11-13T01:13:14+08:00</published>
  
    <updated>2023-11-13T01:13:14+08:00</updated>
  
    <id>http://localhost:4000/posts/Inside-FGameplayTagQuery/</id>
    <content src="http://localhost:4000/posts/Inside-FGameplayTagQuery/" />
    <author>
      <name>RemRemRemRe</name>
    </author>

  
    
    <category term="Unreal Engine" />
    
  

  
    <summary>
      





      什么是FGameplayTagQuery

引用自源码注释:


  FGameplayTagQuery是可以查询FGameplayTagContainer中的一组Tag是否满足特定条件的一组逻辑表达式. 一个匹配成功的query则表示对应的tag container是满足条件的. 其中逻辑表达式支持”与,或,非”,以及嵌套的子表达式. 在内部,它将这些逻辑表达式以字节流的形式表达,实现内存上的高效率,并且运行时可以快速检验


为什么要使用FGameplayTagQuery

因为使用FGameplayTagQuery进行逻辑匹配时,tag数量和匹配逻辑都可以是任意的,且支持逻辑嵌套,而不像:

  FGameplayTag限定了只能用1个tag(虽然除了本身,也可以用于匹配父级tag)
  FGameplayTagContainer只有有限的匹配逻辑(与,或,非中的哪种匹配逻辑,...
    </summary>
  

  </entry>

  
  <entry>
    <title>一种把多个虚幻工程解决方案合而为一的方法</title>
    <link href="http://localhost:4000/zh_CN/posts/A-way-to-combine-multiple-unreal-projects-into-one/" rel="alternate" type="text/html" title="一种把多个虚幻工程解决方案合而为一的方法" />
    <published>2022-06-05T11:15:13+08:00</published>
  
    <updated>2023-06-10T03:29:08+08:00</updated>
  
    <id>http://localhost:4000/posts/A-way-to-combine-multiple-unreal-projects-into-one/</id>
    <content src="http://localhost:4000/posts/A-way-to-combine-multiple-unreal-projects-into-one/" />
    <author>
      <name>RemRemRemRe</name>
    </author>

  
    
    <category term="Unreal Engine" />
    
  

  
    <summary>
      





      使用引擎目录的GenerateProjectFiles.bat和.uprojectdirs文件


  首先参考Default.uprojectdirs文件中的注释
  新建my.uprojectdirs或直接修改Default.uprojectdirs文件,并写入例如Project/
  此时运行GenerateProjectFiles.bat生成解决方案时,会额外从引擎目录/Project目录下的1级子目录寻找虚幻工程目录, 例如UnrealEngine/Project/LyraGame
  完成



  因为.uprojectdirs文件中只支持指定子目录,若想要外部目录的工程也被包含进解决方案文件,可以使用系统提供的symbol-link功能




  已废弃方法

  初衷

  因为工作,学习的原因,我本地会有多个虚幻工程,并且它们共用了同一个引擎

  它们的工程文...
    </summary>
  

  </entry>

</feed>


